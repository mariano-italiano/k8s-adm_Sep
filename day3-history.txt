kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml 
kubectl -n ingress-nginx  get all
watch -n1 kubectl -n ingress-nginx  get all
ip a
kubectl create deployment dep-cars --image nginx 
kubectl create deployment dep-flowers --image nginx 
kubectl expose deployment dep-cars --port 80 --name cars-svc
kubectl expose deployment dep-flowers --port 80 --name flowers-svc
kubectl api-resources 
kubectl get deploy
kubectl get svc
kubectl delete svc lb-svc lb-svc2 
kubectl get svc
kubectl get deploy
kubectl get pods
cd k8s-adm_Sep/
mkdir day3
cd day3
vi index-cars.html
vi index-flowers.html 
kubectl cp --help
kubectl exec -it dep-cars-6fcccf7d69-52dfd -- bash
kubectl cp index-cars.html dep-cars-6fcccf7d69-52dfd:/usr/share/nginx/html/index.html
kubectl get pod
kubectl cp index-flowers.html dep-flowers-7d8d495b66-g2w2m:/usr/share/nginx/html/index.html
kubectl get pod -o wide
vi ingress.yaml
ip a
kubectl get svc -n ingress-nginx 
vi ingress.yaml 
kubectl get ingressclasses.networking.k8s.io 
vi ingress.yaml 
kubectl -n ingress-nginx edit svc ingress-nginx-controller
kubectl get svc -n ingress-nginx 
kubectl get s
kubectl get ns
kubectl delete ns metallb-system
kubectl get svc -n ingress-nginx 
kubectl apply -f ingress-nginx
kubectl apply -f ingress.yaml 
kubectl describe ingress web-ingress 
kubectl edit ingress web-ingress 
kubectl describe ingress web-ingress 
kubectl edit ingress web-ingress 
kubectl get svc
kubectl edit ingress web-ingress 
kubectl get ep,pod
kubectl get ep,pod -o wide
kubectl exec -it my-replicaset-w2h52 -- sh
kubectl edit ingress web-ingress 
kubectl get pods
kubectl describe pod pod
kubectl get pods
kubectl run test-ingress --image nginx --labels app=ingress-test
kubectl expose pod test-ingress --port 80 --name test-ingress-svc
kubectl edit ingress web-ingress 
kubectl exec -ti test-ingress -- sh
kubectl events -n ingress-nginx 
kubectl -n ingress-nginx exec -it ingress-nginx-controller-6cc96cf84d-v8z8l 
kubectl -n ingress-nginx exec -it ingress-nginx-controller-6cc96cf84d-v8z8l  -- basg
kubectl -n ingress-nginx exec -it ingress-nginx-controller-6cc96cf84d-v8z8l  -- bash
kubectl edit ingress web-ingress 
kubectl exec -ti test-ingress -- sh
kubectl get ingress web-ingress -o yaml
q
vi ingress.yaml 
kubectl delete  ingress web-ingress 
kubectl apply -f ingress.yaml 
kubectl describe ingress web-ingress 
kubectl edit ingress web-ingress 
kubectl delete -f -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
kubectl delete ingress web-ingress 
kubectl delete ns ingress-nginx 
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
kubectl edit svc -n ingress-nginx ingress-nginx-controller
kubectl get all -n ingress-nginx 
kubectl apply -f  ingress.yaml 
kubectl  describe ingress web-ingress 
kubectl get svc,ep,pod
kubectl edit ingress web-ingress 
kubectl get svc,ep,pod
vi volume-pod.yaml
kubectl apply -f volume-pod.yaml
kubectl get pod
kubectl get pod -o wide
vi volume-pod.yaml 
kubectl exec -it volume-pod -- sh
kubectl delete pod volume-pod 
vi volume-pod.yaml 
kubectl apply -f volume-pod.yaml
kubectl exec -it volume-pod -- sh
vi test-pv.yaml
kubectl get sc
kubectl apply -f test-pv.yaml 
kubectl get pvc,pv
vi test-pvc.yaml
kubectl apply -f test-pvc.yaml
kubectl get pvc,pv
kubectl edit pvc test-pvc 
vi test-pvc.yaml 
kubectl apply -f test-pvc.yaml
kubectl delete pvc test-pvc 
kubectl apply -f test-pvc.yaml
kubectl get pv,pvc
cp -rp volume-pod.yaml pv-volume-pod.ymal
mv pv-volume-pod.ymal pv-volume-pod.yaml
vi pv-volume-pod.yaml
kubectl apply -f pv-volume-pod.yaml
kubectl get pod
kubectl exec -it pv-volume-pod -- sh
kubectl exec -it pv-volume-pod -- bash
kubectl delete pod pv-volume-pod 
kubectl delete pvc test-pvc 
kubectl get pv,pvc
kubectl apply -f test-pvc.yaml 
kubectl get pv,pvc
kubectl get pv test-pv -o yaml
kubectl patch pv test-pv  -p '{"spec":{"claimRef": null}}'; kubectl get pv
kubectl get pv,pvc
kubectl delete pv test-pv 
kubectl get pv,pvc
kubectl edit pv test-pv 
kubectl get pv,pvc
kubectl delete pvc test-pvc 
kubectl get pv,pvc
sudo apt install nfs-common nfs-kernel-server cifs-utils -y
sudo mkdir /var/nfs
sudo chmod 777 /var/nfs
sudo vi /etc/exports 
sudo exportfs -rav
sudo vi /etc/exports 
sudo exportfs -rav
sudo systemctl restart nfs-kernel-server
cd /tmp/ ; git clone https://github.com/kubernetes-sigs/nfs-ganesha-server-and-external-provisioner.git
cd nfs-ganesha-server-and-external-provisioner/
ls -la
vi deploy/kubernetes/deployment.yaml
kubectl apply -f deploy/kubernetes/deployment.yaml
kubectl create -f deploy/kubernetes/rbac.yaml
vi deploy/kubernetes/class.yaml 
kubectl apply -f deploy/kubernetes/class.yaml
kubectl get sc
cd 
cd k8s-adm_Sep/
cd day3/
kubectl get pv,pvc
vi nfs-pvc.yaml
kubectl get pv,pvc
kubectl apply -f nfs-pvc.yaml
kubectl get pv,pvc
kubectl delete pvc nfs-pvc 
kubectl get pv,pvc
kubectl run test-static-pod --image nginx -o yaml --dry-run=client > /etc/kubernetes/manifests/test-static-pod.yaml
sudo kubectl run test-static-pod --image nginx -o yaml --dry-run=client > /etc/kubernetes/manifests/test-static-pod.yaml
kubectl run test-static-pod --image nginx -o yaml --dry-run=client
sudo vi /etc/kubernetes/manifests/test-static-pod.yaml
kubectl get pods
cat test-pvc.yaml 
cat pv-volume-pod.yaml 
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
kubectl get cm my-configmap 
kubectl describe cm my-configmap 
vi plik1
kubectl create configmap cm1 --from-file plik1 
kubectl describe cm cm1
vi envfile
kubectl create cm from-env-cm --from-env-file envfile 
kubectl describe cm from-env-cm 
kubectl create cm last-cm --from-literal testVar1=val1 --from-literal testVar2=val2 --from-file plik1 
kubectl describe cm last-cm 
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml
kubectl exec -it configmap-pod -- env
vi configmap-vol-pod.yaml
kubectl describe cm my-configmap 
kubectl apply -f configmap-vol-pod.yaml
kubectl exec -it configmap-vol-pod -- bash
kubectl edit cm my-configmap 
kubectl exec -it configmap-vol-pod -- bash
kubectl describe cm my-configmap 
vi configmap-vol-pod.yaml 
kubectl exec -it configmap-vol-pod -- bash
kubectl create secret generic my-secret --from-literal username=root --from-literal password=Atos1234
kubectl get secrets 
kubectl get secrets -o yaml
echo "QXRvczEyMzQ=" | base64 -d
vi mariadb-pass
kubectl create secret generic my-sec2 --from-file mariadb-pass 
kubectl get secrets my-sec2 -o yaml
echo "bXlTM0N1cjNQYXNzCg==" | base64 -d
vi my-secret-pod.yaml
kubectl apply -f my-secret-pod.yaml
vi my-secret-pod.yaml
kubectl apply -f my-secret-pod.yaml
kubectl exec -it my-secret-pod - sh
kubectl get pods
kubectl exec -it secret-pod - sh
kubectl exec -it secret-pod -- sh
vi my-secret-pod.yaml 
kubectl exec -it secret-pod -- sh
htpasswd -c .htpasswd mariola
sudo apt install apache2-utils -y
htpasswd -c .htpasswd mariola
cat .htpasswd 
kubectl create secret generic nginx-htpasswd --from-file .htpasswd 
rm .htpasswd
vi nginx-config.yaml
kubectl apply -f nginx-config.yaml
vi nginx-pod.yaml
kubectl apply -f nginx-pod.yaml
kubectl expose pod nginx-pod --name nginx-pod-svc --type NodePort --port 80
kubectl edit pod nginx-pod 
kubectl expose pod nginx-pod --name nginx-pod-svc --type NodePort --port 80
kubectl get svc
cd ..
history
history  | awk '$1 > 618' | cut -c 8- > day3-history.txt
